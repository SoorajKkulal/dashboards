<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.0twttqe1n0okrd163apas16dfbcf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1dztbhi0mbwow216nsd4914ii28j'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='date' table='[date]' type='table' />
          <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_1893DDC7C5B44D2EB9FC045276DE3705]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_1893DDC7C5B44D2EB9FC045276DE3705]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_1893DDC7C5B44D2EB9FC045276DE3705]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_0CB1CFEE455E4E8489DD4343B3DB550E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_0CB1CFEE455E4E8489DD4343B3DB550E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_0CB1CFEE455E4E8489DD4343B3DB550E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_0CB1CFEE455E4E8489DD4343B3DB550E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_0CB1CFEE455E4E8489DD4343B3DB550E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_AC37F10D06C342BB9AC887B01AA68B16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_AC37F10D06C342BB9AC887B01AA68B16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_AC37F10D06C342BB9AC887B01AA68B16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_3551A8BB196943279ADA6FD20C0E014D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_3551A8BB196943279ADA6FD20C0E014D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized amount' datatype='real' name='[Calculation_824721691202678784]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*84 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_1893DDC7C5B44D2EB9FC045276DE3705]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_0CB1CFEE455E4E8489DD4343B3DB550E]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_AC37F10D06C342BB9AC887B01AA68B16]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_3551A8BB196943279ADA6FD20C0E014D]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),MONTH(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_824721691202678784' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_1893DDC7C5B44D2EB9FC045276DE3705'>
            <properties context=''>
              <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_0CB1CFEE455E4E8489DD4343B3DB550E'>
            <properties context=''>
              <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_AC37F10D06C342BB9AC887B01AA68B16'>
            <properties context=''>
              <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_3551A8BB196943279ADA6FD20C0E014D'>
            <properties context=''>
              <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E'>
            <properties context=''>
              <relation connection='mysql.1dztbhi0mbwow216nsd4914ii28j' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_1893DDC7C5B44D2EB9FC045276DE3705' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E' />
            <second-end-point is-db-set-unique-key='true' object-id='date_0CB1CFEE455E4E8489DD4343B3DB550E' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_AC37F10D06C342BB9AC887B01AA68B16' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_72BBC3FFEA3C45CB8EDEE609984D6D7E' />
            <second-end-point is-db-set-unique-key='true' object-id='products_3551A8BB196943279ADA6FD20C0E014D' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_67296131011F4DBC889785366B007A63]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_868514084A45477B8BA6A414508DBDE9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_341FE1D06C5E49F1A7CE4F8C4DB25E0E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_CAF0CE77774B4DD986F47FE5B997EEB1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_840559394CA048909A9E55A5A471D65F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_988B906FC48B46A4919CD335DEF19D70]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales Quantity By Maket' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_3FB55B133E30411FADC278C4B47751F7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue By Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_354C8BD3FF9F4F19BD1B6EE085E34E84]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_0A639DF7B1DA4E19A76E1D81ABE31D7B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_824721691248726019]' derivation='None' name='[none:Calculation_824721691248726019:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]' value='#59a14f' />
            <format attr='font-weight' field='[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]' value='bold' />
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[mn:cy_date:ok]' value='iLLL' />
            <format attr='color' field='[federated.0twttqe1n0okrd163apas16dfbcf].[mn:cy_date:ok]' value='#b6992d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[none:Calculation_824721691248726019:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0twttqe1n0okrd163apas16dfbcf].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{2D8F9AC8-E319-40F4-BBFD-B67753079D42}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='99' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='15'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='15'><![CDATA[<[federated.0twttqe1n0okrd163apas16dfbcf].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DB3C061C-C140-4B37-ADC3-FEFDD2995A00}' />
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_824721691202678784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*84 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_824721691202678784]' derivation='Sum' name='[sum:Calculation_824721691202678784:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='c#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='15'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='15'><![CDATA[<[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A38727B5-9E43-41F4-85D8-4E15816F0ACD}' />
    </worksheet>
    <worksheet name='Revenue By Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_824721691202678784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*84 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_824721691202678784]' derivation='Sum' name='[sum:Calculation_824721691202678784:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='c0,,.00M' />
            <format attr='height' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]' value='35' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffaaff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]</rows>
        <cols>[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]</cols>
      </table>
      <simple-id uuid='{E96D3AE6-6505-4165-B213-3DB44112BEB9}' />
    </worksheet>
    <worksheet name='Revenue by year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_824721691202678784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*84 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_824721691202678784]' derivation='Sum' name='[sum:Calculation_824721691202678784:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' />
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='8'>&lt;</run>
                <run fontsize='8'>[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]</run>
                <run fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]</rows>
        <cols>([federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok] / [federated.0twttqe1n0okrd163apas16dfbcf].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{44A34C08-680D-46B5-9F72-732670F352C2}' />
    </worksheet>
    <worksheet name='Sales Quantity By Maket'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:sales_qty:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='height' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]' value='36' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]' value='104' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]</rows>
        <cols>[federated.0twttqe1n0okrd163apas16dfbcf].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{1073A3F9-67A3-4763-8014-3F7F59D9D092}' />
    </worksheet>
    <worksheet name='Top 5 customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_824721691202678784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*84 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_824721691202678784]' derivation='Sum' name='[sum:Calculation_824721691202678784:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_824721691202678784])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='96' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='162' />
            <format attr='cell-h' value='54' />
            <format attr='cell' value='54' />
            <format attr='cell-q' value='270' />
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='c#,##0,,.00M' />
            <format attr='height' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='627' />
                <format attr='maxwidth' value='627' />
                <format attr='minheight' value='270' />
                <format attr='maxheight' value='270' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]</rows>
        <cols>[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]</cols>
      </table>
      <simple-id uuid='{AF45E155-A7EA-4383-840C-1B912F593A6C}' />
    </worksheet>
    <worksheet name='Top 5 products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_824721691202678784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*84 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_824721691202678784]' derivation='Sum' name='[sum:Calculation_824721691202678784:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_67296131011F4DBC889785366B007A63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_824721691202678784])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_824721691202678784])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod002&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod003&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod004&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod005&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod006&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod009&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod010&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod013&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod016&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod017&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod018&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod019&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod021&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod023&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod027&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod030&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod033&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod035&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod038&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod039&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod040&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod042&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod044&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod045&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod046&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod047&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod048&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod049&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod052&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod053&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod054&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod055&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod056&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod057&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod058&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod059&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod060&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod061&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod062&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod064&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod065&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod066&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod070&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod071&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod072&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod073&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod074&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod075&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod079&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod083&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod084&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod089&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod090&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod091&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod092&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod093&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod094&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod095&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod096&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod098&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod099&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod100&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod101&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod102&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod103&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod104&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod105&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod106&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod108&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod110&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod113&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod114&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod115&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod116&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod117&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod118&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod119&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod120&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod121&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod122&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod123&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod124&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod126&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod127&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod128&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod129&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod130&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod131&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod133&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod134&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod135&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod136&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod137&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod139&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod140&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod141&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod142&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod143&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod144&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod145&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod146&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod147&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod148&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod149&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod152&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod154&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod156&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod157&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod158&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod159&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod161&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod162&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod164&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod165&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod166&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod167&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod168&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod169&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod170&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod172&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod174&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod175&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod176&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod177&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod178&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod179&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod181&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod184&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod185&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod187&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod188&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod191&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod192&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod194&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod198&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod204&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod205&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod206&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod207&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod208&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod209&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod210&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod212&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod213&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod214&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod215&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod216&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod218&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod219&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod220&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod221&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod223&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod224&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod225&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod227&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod228&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod229&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod230&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod231&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod232&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod233&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod234&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod236&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod237&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod238&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod239&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod240&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod241&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod242&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod243&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod244&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod245&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod246&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod247&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod248&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod249&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod250&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod252&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod254&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod255&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod257&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod258&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod260&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod261&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod263&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod264&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod265&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod266&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod267&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod269&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod270&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod271&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod273&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod274&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod275&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod276&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod278&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod279&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0twttqe1n0okrd163apas16dfbcf].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[none:product_code (products):nk]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='c#,##0,,.00M' />
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='font-size' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='8' />
            <format attr='font-weight' field='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:product_code (products):nk]' value='80' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0twttqe1n0okrd163apas16dfbcf].[none:product_code (products):nk]</rows>
        <cols>[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]</cols>
      </table>
      <simple-id uuid='{9654E10C-8220-4FAA-B04D-9EF23AF22324}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0twttqe1n0okrd163apas16dfbcf' />
          </datasources>
          <datasource-dependencies datasource='federated.0twttqe1n0okrd163apas16dfbcf'>
            <column caption='Blank' datatype='string' name='[Calculation_824721691248726019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_824721691248726019]' derivation='None' name='[none:Calculation_824721691248726019:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_868514084A45477B8BA6A414508DBDE9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_824721691248726019]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action7_3FB55B133E30411FADC278C4B47751F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0twttqe1n0okrd163apas16dfbcf].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='color' value='#f1ce63' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:Calculation_824721691248726019:nk]' value='#ffaaff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0twttqe1n0okrd163apas16dfbcf].[none:Calculation_824721691248726019:nk]' value='#f9a655' />
            <format attr='font-weight' field='[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]' value='#b6992d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0twttqe1n0okrd163apas16dfbcf].[none:Calculation_824721691248726019:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{279F1C0B-80E3-445F-A213-B80C156F025E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='13' param='horz' type-v2='layout-flow' w='98934' x='533' y='889'>
            <zone h='98222' id='11' type-v2='layout-basic' w='98934' x='533' y='889' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6444' id='3' name='Year' show-title='false' w='33333' x='34067' y='5333' />
        <zone h='31667' id='5' name='Month' show-title='false' w='51733' x='20333' y='13222' />
        <zone h='75444' id='6' name='Revenue By Market' w='24600' x='467' y='27333' />
        <zone h='13667' id='7' name='Revenue' show-title='false' w='22000' x='2333' y='17333' />
        <zone h='65556' id='8' name='Sales Quantity By Maket' w='22067' x='25467' y='28778' />
        <zone h='12333' id='9' name='Quantity' show-title='false' w='21600' x='28000' y='17667' />
        <zone h='33444' id='10' name='Revenue by year' w='51467' x='47267' y='17222' />
        <zone h='38111' id='14' name='Top 5 customers' w='25333' x='49133' y='54333' />
        <zone h='39444' id='15' name='Top 5 products' w='23867' x='75533' y='53889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='16' param='vert' type-v2='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='58' h='6444' id='3' is-fixed='true' name='Year' show-title='false' w='33333' x='34067' y='5333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31667' id='5' is-fixed='true' name='Month' show-title='false' w='51733' x='20333' y='13222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33444' id='10' is-fixed='true' name='Revenue by year' w='51467' x='47267' y='17222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='13667' id='7' is-fixed='true' name='Revenue' show-title='false' w='22000' x='2333' y='17333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='111' h='12333' id='9' is-fixed='true' name='Quantity' show-title='false' w='21600' x='28000' y='17667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='75444' id='6' is-fixed='true' name='Revenue By Market' w='24600' x='467' y='27333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65556' id='8' is-fixed='true' name='Sales Quantity By Maket' w='22067' x='25467' y='28778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39444' id='15' is-fixed='true' name='Top 5 products' w='23867' x='75533' y='53889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38111' id='14' is-fixed='true' name='Top 5 customers' w='25333' x='49133' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A25050DD-863F-42E3-9C2D-3DE862B6C4B4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E7831BFA-21AE-4968-8501-1451AAC89FFD}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0twttqe1n0okrd163apas16dfbcf].[sum:sales_qty:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2431539</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{5CE8400D-3ADA-42F3-AE3A-605732A62A79}' />
    </window>
    <window class='worksheet' name='Revenue By Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3D6B3A9-126B-4592-82E3-70300CF98126}' />
    </window>
    <window class='worksheet' name='Sales Quantity By Maket'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8067539-AB42-44B5-BA58-85313DB000D7}' />
    </window>
    <window class='worksheet' name='Top 5 customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3404C100-824B-49BD-9A2D-6542E984D97C}' />
    </window>
    <window class='worksheet' name='Top 5 products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:custmer_name:nk]</field>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBF63A79-D68E-4334-813A-9292F3FEA914}' />
    </window>
    <window class='worksheet' name='Revenue by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0twttqe1n0okrd163apas16dfbcf].[sum:Calculation_824721691202678784:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:year:qk]</field>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{401B65C9-BC25-4452-8FE9-95C4F6EBA713}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:Calculation_824721691248726019:nk]</field>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2D02D1F-D88C-4A01-A324-2C838C3E3E43}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[none:Calculation_824721691248726019:nk]</field>
            <field>[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54F0A88F-CFA2-4DAA-A19D-0B50CAF4600D}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Revenue By Market' />
        <viewpoint name='Revenue by year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity By Maket' />
        <viewpoint name='Top 5 customers' />
        <viewpoint name='Top 5 products' />
        <viewpoint name='Year'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0twttqe1n0okrd163apas16dfbcf].[yr:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2019</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{BE260C64-9B8B-41FA-BB18-325E0EE5B4E4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='29' name='Month' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='103' name='Quantity' width='192'>
      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
      5v8BlQNKrAHdG84AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='86' name='Revenue' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABWCAYAAACZ45lZAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAX+0lEQVR4nO2de1xUZf7H3wuDyEVBLir3EZDwhkgoCqKZaWqatetPyzW3rXZXt612/WVr
      9St/XTTTjdJsy9V+9TLLdM00DTPXEAUEQUTAGwKO3C8Bg3JnZvr9MWeGmWFmQBkVmfP+hzOc
      c57nOec8n/N8n+/znOf7q19++eUXRESsFJs7XQARkTuJKAARq0YUgIhVIwpAxKoRBSBi1YgC
      ELFqRAGIWDWiAESsGlEAIlaNKAARq0YUgIhVIwpAxKoRBSBi1YgCELFqRAGIWDWiAESsGlEA
      IlaN5E4XoM9R9D6LjyUC4B/+EevCfO5wgUTMYRkB1O9h1f4dFN3k6TH37eNZf4uURIc0Ptr+
      DskArkv4x8ML8LZ0FhZHp8wmsLcfjKfrWGJCZnFfQBAuYhveI8Tbd5fR2lpFSeURdp34b5bv
      XMXuqut3ukh3NaIA7maUF9n3w3NsKW660yW5a7GMCeSygHVLFxjZodukT2XF0r8RaZEMrQFj
      96uNxmsysvO/5svzmdSqAOQkpu/jQb/FSO9EMe9yxBbgrqIfTgNDmBTxOhsfWkKg5uk1JHCy
      +o4W7K6lF3uBlLTIU/ju9AESqwqpa1cAEhwdvJEGPMxvx0xjmIOtwTml7P/uWXbJDf4t38GL
      23d0ysFY57u9MY+MghMkF6dx5VqtkC9g48SgAYGED3+MhaGj7njn03bQo8zz3cHGIoBqqhuV
      4Gl4PwCVnCv53/DlheMU1NfTCmDrgq/HFGbf+xumeLhieJYsczmv5JYDEBK5jf8d6WG6INXb
      ee7QXmoAPJ7hwzlzcTc8RlnO6XM72X/pNLLmRhSAxM4dqc9s5oc/zL0D+xlPW9e5In2Zr6ZE
      CdfzPd9c/omLdTU0qYS0Ap7kz1GxDDVyCzKOP0KcTL1t+Mx7pwBUcrJOvUpcXikKvR0KmpqL
      OH9xM6/m7WRs5GpeDPXv9ABvlsrzq1iZcdEgT02ZGqmrzyEhI4cT56fz/LzniLS3UMY3hS0+
      rn5QVAxA2bUKQN/lqqw7xD+OfsrZJoMrUtZTUnmArfGHOBjyGm9MHIuzzm5pQCxDcndTCeQV
      pSMfORtXE6UoK89UV35gRGBMp8rfUPYpbyUcoFip/39Few35sh28JzvI6Alv8vcun2MbFYX/
      5P2TPxpPK/89XqqtZO2cBfjewMupF5pA18lI+ivrO1V+A1Q1nD21gtW5pRbLWaloMZ+ngKLp
      KJuSEmiwWM43QxNXaoq1v/xcDcYbWtP45MiWzpVfDwXleW+xLrsIvTrlPpFJGkVUZZLTbur8
      UtJlMmF7NBP9B+ntVdbtYd1PnSu/PnJyT73OJ0VdeLNk77EiqXPl10VRu4PP8urMp2NAr2sB
      mou2sUWmsWEkeAUuY3l4DMOcHbCljcbaNL46sZmE+lZAQWHWxxwZ9jYznAB8mP/wPuYDNzsO
      YG8fwqjhU5nuF0GQ62AG2qnfS+2tMrLPfc623CzqAUXpUU42TWOGo6XvQPdoKNrCV1rtjybE
      wEpJTt5Acot6W+IYw+Kpv+M+98H0t1FfS3r6Bj4pLEWBgsLsL0i551VitS1aIBOkXuzLLQfS
      Sb3aRGywkQttyiZb86gGxzBe75BCvknYQaFK/cve42H+MnEhYW7O2KGkpeEch1Pi2FUhB+Qk
      Z3zLLN+lBJl7Jds4IfWaw4yw+5ng5oWTLbQ3ZrMn4U0O1KqFfqEqD0KjunUPode1AD+TmJtI
      IwASAsPjWD/5AYKdHYTmsR9ObrH8Yd4GFrkJ2lXlEn+p0CK5Dxm1nm2L1vNixEOM8/TSVn4A
      O3sp90a8xp+DNa/GXPJ+tki23UfZQF1tOvuPv8BzxxKpF/7tErKI+w3q55ES4c3ffyrPz1vJ
      LE915Qf1tURP3sTfQwTDRpXO0QL9i5EGxDJE2M4py8HYi1delMwFYXuEdKKemaQsO8wRoYmU
      uC3hrVlPca+bM3YA2NLfOYz5M//B7wcLz7HhR45VmHm9ey5lw6LtrJ3+W6Z5qis/gJ1TGI9H
      Pdy539FNelcL0JROuuY59JvOotEm7EIbf+bHPsZJoYNUWZhEQUQgQT3M3tbWRGes4whGeodD
      fpK6uG1NwK1qAhKJ257Y5VEStyW8OmFMp/uUJ/wNGf2Eib6KLaPGLCAkbxt5QF55Ds0jp+Gg
      2e0+kUnOu9nXAIqiFM6ooojUe102kVOaK2x3Nn8uFiULLzJnpkY8asIu9+D+sOns/s9hGmkg
      q6wQvIcbv1AnH3zsTPQS+jniBNq+yI3QuwRQk89lYdNJOpkx5tonlwlMcNlBUT3QVExZOwTZ
      WaAMqmZKK38i+XwiSfJKrjcKnhNjxW2q49YJoCvs8Qt+gRcnRuNp8j75EeZlxoPjdA/3OEJe
      E9BYQx10CEDXDFKd5myFkkhvnQrYnkaqxgTrZP5UcOVnTQ8pnNHGXDMCtp6hhHCYM0BNU63p
      st4iepcAflFoO6Hujm5dHOyDjwuo7YBqapsAl55lr2xIYPMPH5FmtuN4p3EgJHQFfxgXYfqN
      qKWYPQceYU93kpUXUwZ6/aQOb1ADqUXnedp7jHafsjyLHGHb0PwBJUqVZjuJjTuSulMCoQxR
      t3XOVu8SwJ2k/TTb4jeS1gLqt+tSloZOJsjVRWs7A3qzPW8tOiPBrWlsObCBxCYF0Exh1QUa
      VeNvfRF0zKDGkjMUMEYwM5WckSULL6vO5s/dRO8SwK8kSAAFxv3a+pRSqukF4olbDy0RecG3
      JLYAODNxysc8Lx3QswQtiX0Uf5q3EsX+d0huAUXtXt4+4tgNn7cfC+Z9yK9vun7qmEFNJzhV
      vZQgT4Dz5JQJrWQn88eQybyw5EWiepm7RUPvKpZ7MJoukKLkFDkqM8fWJHFCIwBHP7x7aP/n
      V2k6dOFE+feiyq/BPoplMzqmPyhqd7DmWALV5u4RxZwq7tk4SYc3qJqz5UJa5SdJaVNvdjZ/
      AHzw13jpyCKjpPdO1utdAnAcz3hNn63tMF8aDtBoUBWx/+ReKoWfQwInm/cAXbvMFZODOYYU
      cNXUWIqynBTZpe4mZHFsBy1g1cxfa0VQX7KR15PSjA7IadyCRdnvs7/O7EgU0EbFNRM+XZ1B
      sSLZScqAgtJ0wcNj2vwJHTpO2GogOXULGaY8CRpUcioabr1QlCr9e9G7BIAHU0dPxUn4VZS9
      gpeS/kN+Q7MghDYaa0+w9cBKdtVq5uiMZs49gUbScuswi1RpbDvyFbnadJS0NJdTq/NQHPpp
      /PvlHDz+ISly4VhVM9dqs/nh1Cv8ZedyNssqLHvJN4jz4KWsmjJV29+vl21gderZTiJ4QPNa
      VuWz6/s/8m5mOkXNzR0vFGUDdbXZ/JC5hld2LmZFVoGJHAO5199TvSnPILuxkNNFwsw7M+aP
      Q8ADxGi8yi2JxO15ga15eVS0tmmPUbbXU1GdxP7k1/jrzif5oPDGRnG7S8ezhYwzn3K6USiD
      sqGX9QEAB/9n+JP0LHEyOaCgvHAzrxduNnG0hMDw5cIosCHDmRToxQFhUlfrz7tZu3e33hG6
      E6NCA6bgkhevHuW9fpTN3x3FWK4u/V2pbzGcbXd7cfZ/nlcjKnkt8yKtmukMjnG8EdYxbjI3
      dgnp3wsjsaoazuau4WyuuVRNExQQi/v5vdRwkR+ObaFVUJtx80fALorfRU8lVzNgp7xKQupL
      JKSazsfiHwUKBA4ehSQvDQWguB7Pe9/Ea/f1shYAYACRkz/gpRAf8+q0cWfshDjeGG26oywN
      f7ljxLgLbL0e5+lAd9N52gYwbfLHbJo4tlvp3Vps8R29hrfCg4XyKijMep13L3aYjGpzaSHD
      uzNT0MYJqYun6f2ek4gW3vRVNZeEEeiuvT/O/s/zZnQMbt2pZbZDCBhwa8ZUHAKXstBEPeh1
      LQAANq6ET9zEv0JvdDq0YTr+zJ+zjZCL/8fOcx1TcbF1wcM1hFC9lmMAkZM/Zr33F2w7+xN5
      1xtRIMHRIZDwe/6LBaPGq6fa3uyHzxbHFt+w1Twvf05oLYVJZf0/YJlUPcXZefBi3njsQfIL
      9vH1hTRKGqq4Jiik49viGcT6h+Bm9lYOZ4LUkwPndT466NL7oy6jZ/BKNgY8RtaFf7P/8jnK
      mtVTmNXP0g1vt6lEj5zCfUP89N3NFsWHuXP+iWfGh+wquEBFu0I7vf1XYpxgEWumF5pAIiK3
      D1EAIlaNKAARq0YUgIhVIwpAxKoRBSBi1YgCELFqRAGIWDWiAESsGlEAIlaNKAARq0YUgIhV
      IwpAxKoRBSBi1YgCELFqRAGIWDWiAESsGlEAIlZN7/wm+FZgJLSO5rvQqBFPMj+4mzF3Vc2U
      lnxP/IXjZNWWaUMoSezcGeoWQcyIh3nQt/vftyqbCzh+4WsSruRRrFmI18aJQQ4+DBs2ldmB
      9xPq6tDjKDg9yUfZXsWVkuOkFJ4iw2DBYO23xV1et7EYyJ7Mm72Vx818j99BIbv3rmCfwfov
      PQ1GbhXfBDdU7WHTsR3ktpg+RuIYwx9mrSDW2XRVa685SFzC511EXQGJYwSLp61ilru55dav
      k5f9PpuyNdEeTdOzQOI9yaeO1BOr2HKl0uQK2bpIHCN4YvqrzBhk7B4aDwLuPnIDH0aaWBJd
      FxPB2HsqgD5vAinr9rDuR/OVH0DRlMzH8ZtMrmCmrNvDG4e2dVn51Wllsv3QK2ZWZFOHgXo7
      q+tK2TN6mk8TlXXdq/ygvu7Pvl/Hie6eANQUpSPrxnFlV5NuyYIcfdsEUl1mt06YHsmAaBZH
      PUHsECG8Tms5lwq+4LPMFMpVQEsim5LC+ef0aXpB46COxPSvtelgG8C08c8yz88PTwcHbFHS
      0lxFSfG3bE0X4lip8vkm/SemzpzRafGohvxNbCqs0S4Fb+8yk6XRj2rD/qBq5lpDMedkRzia
      f/ymL99i+dg4MdTzfmaOjCXc3Rt3R02kF3Xc4lO5H7E9/6paKKp0tp/JIXbiGNPpuS5hhTSJ
      uCwZNJzibP1ipGaXtq/jXJkMAIn0Zda67uSlLFk374J5+rQAlCUHOaSxGV0Xs3buQr3VlO3s
      vRg98iXWe+1htbCKmqJ0N/E101ioF3MnjwsVHUsx/v6Rtw1Wo7Olv4MXwSF/Zq2XP2v3b+OC
      ChQVueQzQz/YteosuzLStZXSRfoyG6ZE6QvOxoGBA0OYFBbCpLBlOmvt3wAWyceR4JGvEjds
      vNHwo5q4xdOi4xjlupoXM3JRAI1VlyhjjNl1/r0DJuOfJaMIGSevljLfnBnTlEpqFYCEcN8x
      2DTs7OLiu0+fNoEulp0WKoCEmPDfmFxK3HbQAp4Z6SX8KufI5RzjBwIMDGeU0aUYhbQGjCNs
      oOn9zbJ4EjXLY7ou5tXJBpWyc4rY3sRTskw+gxgVbKry65872Cf8xgJbuEQQoVl0t+SM2fBG
      zWWZQiyycYz3s+zqcX1aAM1tmte/L74u5p+i9J6HCBG21cEgdAkiSLNqtTyJVDOrLSvrkjmp
      WTrUYzjD9PY2kXElTSvKyNFzbyim7Y1wu/LR0FB9iTJhW+Lqpw2wZxp17AEAfk4l0+TC0E1k
      Fp1Rb/pEE2mJMFg69GkBdFBCSX0XS4Q7hRGmsUOFmGMdeDBjkmZtfhl74lewOVt3tWUlLc0y
      TmfH8Ur8V+rOmk0wiybNNoheWEC+dnXBicRIb118sduVDyipr9jOulTB3LIJZuHYqG65baV+
      k4T7k0tWmQkFqHLIEoJxjPAJ14lhZhn6dB/Azy0YZPmAgrTsb5nvay6iigeezpiMOWY7aAGr
      Z/cX3KBXSclaQ0qW8ZS0blBDd2BTCSVas0SKH82UlgsB+X6+ys+taveJxM4d6eD7mTb2IaZ4
      uN7UGMCtzEfZXs+15kpkJekcLYgnu05Yc9XGnalTVjO3u7HaPCcR7biXA01w5moazcHTOlVw
      ZUkKaSq4VaGY+rQAhgybzoisfHWHtHYHrx2o0veCoKSluZ4q+RnOFKWS0sXS/3buc/n7r2PJ
      SFlBXKFxq3VQ4Mu8Ex3FQGNCa28UAksALUdYv3MHVUYaJkV7Dfml/ya/9Fu+CVzBmujo7g3S
      6WDpfMqy/8qLJj0vEtw8Z/NE7JNEmRlH6YzOorvlqWS2TyPGwMTR9uO6tRjvjdOnBYDTTH4f
      dpRXsvJRAK31P7L10I9s7fLEVlqNuPu7MxBWV/gOf6kwMRCmUnUEqGippKrLciioLVzPKslb
      bJ7YORawOW5XPuBN1ITlPDF8TBcrTBsnyGc8TufjaVSdJqtcSYy/biI5nJKp+3Eh/uNNxyLo
      AX1bAMIS4itb/oe4i1e7GNCRILFRoFAB2GNvcGfUA2GaMQVXgkOXsHRkDMOchXGAhgJOZgv+
      cGEgrPWhd5mvawbZ2HRULhsnhnqOY6LfTCZKAxjcX4hGqWygovIYu9I+J+26Wmj1eV9yZMw6
      ZpnxPnW+8tuTD5SRduo10jKckPo/zhPjZzOiq2XrdfGaRHS/eI60KUiTZbDMX6f/UH2GzDYA
      KeN8zMQ77gF9XAAAAxgzYSP/Ck0nPuvfHC3Xt4GHuo0g0m8mMcMHkBb/N/bUAzjjqNsUq3LY
      fqSj8sfc9yHP6gXSs6W/cwjTojcy3vd9Vh5LpF6Vz64jnxK84I+MMmZWeD3DmumdbV5snRnq
      PZcX5oex9+Dz7JEDXCTpSgWzRg+98cu3UD7eYR/wVZjmfjRzraUZef0ZzhQeI0GWQ5WyEZls
      G28VJ7F4zhrmGp0OYYwxTJA6cySvAUVZJudVUdoA6bLik2r3qOtkxvcwBrQprEAAauwGjmf+
      lPHMN3VAewIFmqiT/fzx1rE3lSX/IUGYSiHxfYqnzESRdPb/E0t8k/moRAEtP3Ks5GlGaZp1
      R3fcEWJs1KkDU5sM7mfjz/ywyew5rg4yXVh7Fei+AG5pPjYODHR0YKDjdPy9pjN/kpwLmW/z
      zvl8FMqLfJXwJSMeWUpQN/stof4xOOUdprEtmYzK5YzxAijlbIk6vNUQ34hbFjzbStygXdNc
      nKqNfI7ncHTD7lXKr2pHVL09grpwxTkyzMNX2FZQLNfpWdsFEaR1tZ7ncqPhufrY2tz8HNDb
      lQ8ANq6MiFzFYo2V0vAjxyvNnqGf/9AIwm0AGki5KjyF+pPCeIonE/yMBUG0DKIAAFSX2Zel
      M3A0LEqvktvadDSUZfIS46FbtSgpk5dof0n0Kpc/Y300c38vcvjCZbNpNbd1+Mad+t2YC+R2
      5dOBBx7aoeYGmrodlhawiSTKX32PNYOQ8vIsdQvmGMuEbk2Xvjn6vACUyjbzFVYlJy1pDQc0
      g8b9pjPDYOBoiHuINnSrQraTvTVtmKK9Zhd7ZJr2wpkgd31zImj4g9poiJXn1/BJ0XUT5Sri
      0Pl04YeEEYPNRkLuhCXyqbyyryNcbFe0ppCiGQo27EN1iS3jpDFqe7zpBKeq60iXqUNauksn
      mY8B3UP6fB+g8twrvH51EDOD5nX2gtSmciBlKwn1Gv+QhHGRS7SdMC1eDzHXNZ5dcgAZ3x5a
      TuHIZTw+YjQ+2tmgxZy7sJ3PzmdSqznP9REe9DJIy2UOiwIPsqFQHdgu+dhzVIY+zTNjItVp
      qZqprklmb9InJGrqbP+ZPGg4mlv0PouPJWp/dprLb4F8lNePsfnE52y1D2HU8KlM94tAOtCd
      QfYa924bjU1lyGTxbD8jzIIF6BdDZNdzIfSw9bqXcJtEMlTVnCrcg3cVgDMRPt34VqAH9HkB
      gIKmunT2ZaSzL8PccRLcAleyPNhYB9fnxuPu2gSzKPZRI503R8ZFv8ki+Qoh2Lec/Ivvseqi
      qYRciZn4uHFPklksl09rax6ZuXlkdivOsCsx0UZeIl1hF0mUt4SMEgWVl76nEqDfFCYYvkAs
      TJ83gbqHPcNHv806MzMm1VMhnmGsY9fvDIljBEtnr9UfA9DFxp/5M97mEQ978wnZ+DDj/g9Y
      ZsbrZP78nuXjOCgUvxvpH9sGMOumy+tIhP84vf84+UcRehMp3Qh9vgXwDlvPZq9TnMg7THJF
      EdXa71ntGegUQPCwmfxmRDdiDqOZCjHdMt8E24eycM4XPFB9nIOZ35GmTUsdmzg0aB6Pj4nG
      x66HHpoe5OPqt4x3f/sUtdWnOFGYSk5FHuVNtdpr7oj1G8W9w2fe0LfQxnAIiGZcSjpnhLTD
      fUf3+FvorrCKb4JFREwhmkAiVo0oABGrRhSAiFUjCkDEqhEFIGLV/D9TwZ4Yb+aPCwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue By Market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by year' width='192'>
      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
      8CMk9GaypBA3Ruf3BZ6ZmmAmoSO/8SgvPFTP2ROnsWQUE/aOkVD1mHS7x2ZoOyGm5KErPgT6
      NUbmM6VALEDs2NcwvfhVBIPlrlmkmmdJ9L97x5tTV3YU08//I4J+dbMlQZTQP/plxPwmwv/0
      CZTJ66vKD++bBKdn5aHTCQw5/MgiGIQEsqJismUQDXhxyTPkFBYu+AQP9/cSiioMjExQlZ9J
      9/gMhw6LOFwuhofs6ESJmakJWgYHyC6qRJmbxaKbQ1/YTGRydlv4g241m94HxhT0n/oGKqyt
      3lgIdc6FuOdjKMm5KPdSRkoBanSORMCNkLQ4BIuciNF6+Tym9EJS9TGu9w3TsP8hsm1mIgEv
      1zr7OXDoII7BbiKSDZsQwZhdRIZZpat3ksaGeb8FoenjCH4niZ53ULNWF/ZmYRLsdY4yMSuz
      p7oMWZaRJIm2tlaMJhMmUWBOBjEapWpvMwbWP4HTJsH3pw9UOc6lC2cJKSb2VudxvqWXuub9
      VBRkASqXT7xK6aEXGG47x2xCT0NBGs6Eif3VBbxz7BzPPf/UshsQvofiHkBIyV3VR6/YpX9E
      SM5B37A45pHbOQ7mNK5cOI0YmyMlv5ojB5rRifD6K/+BJbOE+vJM3jrVwYHDh3C1XiZaWEa5
      KUbrUJBPfeyZRe2O/vi30T/8RXQF+24XYVkE4X0DrkA4giRHGBy13xwOXSc7v5T09HSKinMx
      m1PJzMq6P9tKamwYqiCy/9BDKBE/o4ODyKKExTS/Qjc13s+UfZzpEDQfPIIuMMvEiJP+sWHc
      432MOe7u9ihmVa76i69U+RTy4Mklxw0mE52Xz9J88CjPvfhxGkuSOHuhD1CIyQaay1J598xV
      ihsOYO9vJ6azICXCuIIKudbFiyiCTo/hmf9M7PTXUWPBe5ftvR8l5Yu3EM2+LWJeZek9l6mx
      hQiqzNnTp9l75HEsBoE9OoUTJ1vI/cBjdHR0MzPjYWh4GPfsEI2PHmXy6hUK0pM43z1FVWEa
      oHLl3EmcTieNe/dytm2IvXsaaKopwz7YybUbo2TllyOFXQQSBprLM/jOTzv5yq9/lP/1tb/l
      s7/3O9yuHkJ6GWo0gBryLhoGBSbHmA4p6AYHCU4JjIxPsufgIzgc0+ypK+Ni5yhPPvs8PS2X
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity By Maket' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 customers' width='192'>
      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
      QkgKswEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 products' width='192'>
      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
    </thumbnail>
    <thumbnail height='29' name='Year' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
